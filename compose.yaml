name: hs-db

services:

  runner:
    container_name: runner
    platform: linux/amd64
    env_file:
      - .env
    build:
      context: .
      dockerfile: dockerfile.github-actions
      args:
        RUNNER_TOKEN: ${RUNNER_TOKEN}
        RUNNER_ALLOW_RUNASROOT: 1
    volumes:
      - /actions-runner
    ports:
      - 8080:8080
    depends_on:
      - app

  app:
    container_name: app
    image: hs-db:latest
    build:
      context: .
      dockerfile: dockerfile.dev
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist-newstyle
    ports:
      - 8888:8888
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - postgres-network


  postgres:
    container_name: postgres
    image: 'postgres:latest'
    ports:
      - 5433:5432
    networks:
      - postgres-network
    env_file:
      - .env
    volumes:
      - /var/lib/postgresql/data
      - type: bind
        source: ./dist-newstyle/volumes/postgres_logs
        target: /var/log/postgresql
    command: >
        -c logging_collector=on
        -c log_directory=/var/log/postgresql
        -c log_filename='postgresql.log'
        -c log_statement=all
        -c log_connections=on
        -c log_disconnections=on

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - 15433:80
    depends_on:
      - postgres
    networks:
      - postgres-network
    volumes:
      - pgadmin:/var/lib/pgadmin/
    environment:
      - PGADMIN_DEFAULT_EMAIL=user1@example.com
      - PGADMIN_DEFAULT_PASSWORD=user1

volumes:
  pgadmin:

networks:
  postgres-network:
    driver: bridge
